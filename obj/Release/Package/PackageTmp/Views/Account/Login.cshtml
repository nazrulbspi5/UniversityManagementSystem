@using UoUWebApp.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}
@section Styles{
    <style>
        .container {
            height: calc(100vh - 10px);
            display: table;
            /*background: url(/assets/images/logo-black.png) no-repeat center;*/
            background-size: contain;
        }

        .display-table-cell {
            display: table-cell;
            vertical-align: middle;
        }

        .logo {
            max-width: 180px;
            width: 100%;
            margin: auto;
        }

        .panel-default {
            /*background: rgba(255, 255, 255, .8);*/
        }

        .validation-summary-errors.text-danger ul {
            list-style: none;
            list-style-type: none;
            display: block;
            padding: 5px;
            text-align: center;
            margin: 0;
        }
    </style>
}
    <div class="container">
        <div class="display-table-cell">
            <div class="row">
                <div class="col-sm-4 col-sm-offset-4">
                    <div class="row text-center">
                        <div class="col-sm-12">
                            @*<img class="logo" src="~/assets/images/logo-black.png" />*@
                            <h3>UNIVERSITY <i>of</i> UNIVERSE</h3>
                        </div>
                    </div>
                    <section id="loginForm">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "panel panel-default login-form", role = "form" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="panel-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            <i class="glyphicon glyphicon-user"></i>
                                        </span>
                                        @*@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })*@
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "email@domain.com" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            <i class="glyphicon glyphicon-barcode"></i>
                                        </span>
                                        @*@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })*@
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "password" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="row">
                                    <div class="col-xs-6">
                                        <!--div class="checkbox"-->
                                            @Html.CheckBoxFor(m => m.RememberMe)
                                            @Html.LabelFor(m => m.RememberMe)
                                        <!--/div-->
                                    </div>
                                    <div class="col-xs-6 text-right">
                                        <button class="btn btn-default" type="submit">Login</button>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-xs-6">
                                        <p>
                                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                                        </p>
                                    </div>
                                    <div class="col-xs-6 text-right">
                                        <a href="/"><i class="glyphicon glyphicon-circle-arrow-left"></i> Back to <i class="glyphicon glyphicon-home"></i></a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default hidden">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <p>
                                            @Html.ActionLink("Register as a new user", "Register")
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>                    
                </div>
                <div class="col-sm-8 col-sm-offset-2 hidden">
                    <section id="socialLoginForm">
                        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </section>
                </div>
            </div>
        </div>
    </div>

@section Scripts{
    <script>
        $(document).ready(function () {
            var form = $('.login-form')
                , formData = $.data(form[0])
                , settings = formData.validator.settings
                // Store existing event handlers in local variables
                , oldErrorPlacement = settings.errorPlacement
                , oldSuccess = settings.success
                , oldHighlight = settings.highlight
                , oldUnighlight = settings.unhighlight
                , oldErrorClass = settings.errorClass;
            
            settings.errorClass = 'help-block';

            settings.errorPlacement = function (label, element) {
                // Call old handler so it can update the HTML
                oldErrorPlacement(label, element);

                //avoiding "Remember Me" checkbox.
                if ($(element).attr('type') != 'checkbox') {
                    // Add Bootstrap classes to newly added elements
                    label.parents('.form-group').addClass('has-error');
                    label.addClass('text-danger');

                    if (!element.next("span")[0]) {
                        $("<span class='glyphicon glyphicon-remove form-control-feedback'></span>").insertAfter(element);
                    }
                }
            };

            settings.highlight = function (element) {
                oldHighlight(element);
                //avoiding "Remember Me" checkbox.
                if ($(element).attr('type') != 'checkbox') {
                    $(element).closest('.form-group').addClass('has-error').removeClass("has-success");
                    $(element).next("span").addClass("glyphicon-remove").removeClass("glyphicon-ok");
                }
            }

            settings.unhighlight = function (element) {
                oldUnighlight(element);
                //avoiding "Remember Me" checkbox.
                if ($(element).attr('type') != 'checkbox') {
                    $(element).closest('.form-group').addClass("has-success").removeClass("has-error");
                    $(element).next("span").addClass("glyphicon-ok").removeClass("glyphicon-remove");
                }
            }

            settings.success = function (label, element) {
                // Remove error class from <div class="form-group">, but don't worry about
                // validation error messages as the plugin is going to remove it anyway
                label.parents('.form-group').removeClass('has-error');

                if ($(element).attr('type') != 'checkbox') {
                    if (!$(element).next("span")[0]) {
                        $("<span class='glyphicon glyphicon-ok form-control-feedback'></span>").insertAfter($(element));
                    }
                }

                // Call old handler to do rest of the work
                oldSuccess(label, element);
            };
        });
    </script>
}